name: 'Valikube add a version suffix'
description: |
  Add suffix to deployed resources to support multiple deploys of the same
  environment (e.g. multiple stage deploys). Also update the domain name
  for the deplyed application with the same suffix.
inputs:
  version:
    description: 'The version to add as a suffix'
    required: true
  env:
    description: 'The environment to modify'
    required: false
    default: 'stage'
runs:
  using: 'composite'
  steps:
    - name: Add suffix to created resources
      run: |
        echo 'Adding nameSuffix to kustomization.yaml'
        cd kubernetes/overlays/${{ inputs.env }}
        kustomize edit set namesuffix -- "-${{ inputs.version }}"
        echo '::group::Modified kustomization.yaml'
        cat kustomization.yaml
        echo '::endgroup::'
      shell: bash
    - name: Add suffix to patches
      run: |
        # Modifies the patches, adding a suffix to the first value in each
        # patch (adding the suffix to the subdomain if it's a hostname that's
        # part of the first value.
        # For the label patches, this adds a suffix to the label selectors.
        # For the lb patch, it modifies the hostname.
        # This is needed so we can deploy multiple versions of the same
        # thing at once and not have them clash.
        FILES=(
          lb-patch.yaml
          deployment-label-patch.yaml
          service-label-patch.yaml
        )
        for BASE_FILENAME in "${FILES[@]}"; do
          FILENAME="kubernetes/overlays/${{ inputs.env }}/$BASE_FILENAME"
          if [[ -e "$FILENAME" ]]; then
            echo "Modifying $BASE_FILENAME"
            yq -i e '
              "${{ inputs.version }}" as $suffix |
              .[0].value |= sub("^([^.]+)", "${1}-" + $suffix)' \
              "$FILENAME"
              echo "::group::Modified $BASE_FILENAME"
              cat "$FILENAME"
              echo '::endgroup::'
          else
            echo "::warning::$FILENAME doesn't exist. Skipping modification"
          fi
        done
      shell: bash
